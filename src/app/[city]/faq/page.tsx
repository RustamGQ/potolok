import { Metadata } from 'next';
import { getCityBySlug, cities } from '../../../lib/cities';
import { notFound } from 'next/navigation';
import { generatePageMetadata, generatePageContent } from '../../../lib/page-generator';
import '../../../styles/faq.scss';

interface FAQPageProps {
  params: Promise<{
    city: string;
  }>;
}

export async function generateStaticParams() {
  return cities.map((city) => ({
    city: city.slug,
  }));
}

export async function generateMetadata({ params }: FAQPageProps): Promise<Metadata> {
  const { city: citySlug } = await params;
  const seoMeta = generatePageMetadata(citySlug, 'faq');
  
  if (!seoMeta) {
    return {
      title: 'FAQ - –ü–û–¢–û–õ–ö–ò',
      description: '–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—Ç—è–∂–Ω—ã—Ö –ø–æ—Ç–æ–ª–∫–∞—Ö. –¶–µ–Ω—ã, —Å—Ä–æ–∫–∏, –≥–∞—Ä–∞–Ω—Ç–∏–∏, –º–∞—Ç–µ—Ä–∏–∞–ª—ã.'
    };
  }

  return {
    title: seoMeta.title,
    description: seoMeta.description,
    keywords: seoMeta.keywords,
    openGraph: seoMeta.openGraph,
    alternates: {
              canonical: `https://potolkivip-rnd.ru/${citySlug}/faq`
    }
  };
}

export default async function FAQPage({ params }: FAQPageProps) {
  const { city: citySlug } = await params;
  const city = getCityBySlug(citySlug);
  
  if (!city) {
    notFound();
  }

  const pageContent = generatePageContent(citySlug, 'faq');

  return (
    <section className="faq-page">
      <div className="container">
        <div className="faq-page__header">
          <h1 className="faq-page__title">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—Ç—è–∂–Ω—ã—Ö –ø–æ—Ç–æ–ª–∫–∞—Ö –≤ {city.name}</h1>
          <p className="faq-page__subtitle">
            –û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ {city.name}. 
            –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏!
          </p>
        </div>

        <div className="faq-page__content">
          <div className="faq-list">
            {pageContent && 'faq' in pageContent && Array.isArray(pageContent.faq) ? 
              pageContent.faq.map((item, index) => (
                <div key={index} className="faq-item">
                  <details className="faq-item__details">
                    <summary className="faq-item__question">
                      {item.question}
                      <span className="faq-item__icon">+</span>
                    </summary>
                    <div className="faq-item__answer">
                      <p>{item.answer}</p>
                    </div>
                  </details>
                </div>
              )) : null}
          </div>

          <div className="faq-page__contact">
            <h3>–ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å?</h3>
            <p>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</p>
            <div className="faq-page__contact-buttons">
              <a href="tel:+79895234952" className="faq-page__contact-btn faq-page__contact-btn--phone">
                üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å
              </a>
              <a href="https://wa.me/79895234952" className="faq-page__contact-btn faq-page__contact-btn--whatsapp">
                üí¨ WhatsApp
              </a>
              <a href="https://t.me/rostovpotolki" className="faq-page__contact-btn faq-page__contact-btn--telegram">
                üì± Telegram
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
